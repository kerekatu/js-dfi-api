{"version":3,"sources":["../src/index.mjs","src/js/app.js"],"names":["url","options","Promise","resolve","reject","request","XMLHttpRequest","keys","all","headers","response","ok","status","statusText","responseURL","text","responseText","json","JSON","parse","blob","Blob","clone","entries","get","n","toLowerCase","has","const","i","open","method","onload","getAllResponseHeaders","replace","m","key","value","push","onerror","withCredentials","credentials","setRequestHeader","send","body","CREDENTIALS","URL","Authorization","btoa","then","result","console","log"],"mappings":"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","file":"app.77c12427.js","sourceRoot":"..","sourcesContent":["export default function(url, options) {\n\toptions = options || {};\n\treturn new Promise( (resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\tconst keys = [];\n\t\tconst all = [];\n\t\tconst headers = {};\n\n\t\tconst response = () => ({\n\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\n\t\t\tstatusText: request.statusText,\n\t\t\tstatus: request.status,\n\t\t\turl: request.responseURL,\n\t\t\ttext: () => Promise.resolve(request.responseText),\n\t\t\tjson: () => Promise.resolve(JSON.parse(request.responseText)),\n\t\t\tblob: () => Promise.resolve(new Blob([request.response])),\n\t\t\tclone: response,\n\t\t\theaders: {\n\t\t\t\tkeys: () => keys,\n\t\t\t\tentries: () => all,\n\t\t\t\tget: n => headers[n.toLowerCase()],\n\t\t\t\thas: n => n.toLowerCase() in headers\n\t\t\t}\n\t\t});\n\n\t\trequest.open(options.method || 'get', url, true);\n\n\t\trequest.onload = () => {\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, (m, key, value) => {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theaders[key] = headers[key] ? `${headers[key]},${value}` : value;\n\t\t\t});\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\tfor (const i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.send(options.body || null);\n\t});\n}\n","import fetch from 'unfetch'\r\n\r\nconst CREDENTIALS = 'F005936:JRbTlfWVMH0bm3n'\r\nconst URL = 'https://api.dfi.dk/v1/film/74245'\r\n\r\nfetch(URL, {\r\n  method: 'GET',\r\n  headers: {\r\n    Authorization: 'Basic ' + btoa(CREDENTIALS)\r\n  }\r\n})\r\n  .then((response) => response.json())\r\n  .then((result) => console.log(result))\r\n"]}